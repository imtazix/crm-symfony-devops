pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "imtazix/crm-symfony-devops"
    }

    stages {

        stage('Checkout') {
            steps {
                git credentialsId: 'github-token', url: 'https://github.com/imtazix/crm-symfony-devops.git', branch: 'main'
            }
        }

        stage('Composer install') {
            agent {
                docker {
                    image 'composer:2.5'
                    args '-v $WORKSPACE:/app -w /app'
                }
            }
            steps {
                // Exécution directe des commandes avec /bin/bash pour contourner le problème 'sh'
                sh '''
                    #!/bin/bash
                    composer install --no-interaction --prefer-dist
                    php bin/console cache:clear || true
                '''
            }
        }

        stage('Build Docker image') {
            steps {
                sh 'docker build -t $DOCKER_IMAGE .'
            }
        }

        stage('Push to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerHub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $DOCKER_IMAGE
                    '''
                }
            }
        }
    }
}
