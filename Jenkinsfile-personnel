pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "imtazix/crm-symfony-devops"
        PATH = "/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Applications/Docker.app/Contents/Resources/bin"
    }

    stages {

        stage('Cloner le projet') {
            steps {
                git credentialsId: 'github-token', url: 'https://github.com/imtazix/crm-symfony-devops.git', branch: 'main'
            }
        }

        stage('Composer Install') {
            steps {
                echo 'Installation des d√©pendances PHP'
                sh 'composer install --no-interaction'
                sh 'php bin/console cache:clear || true'
            }
        }

        stage('Analyse SonarQube') {
            steps {
                echo 'Analyse du code avec SonarQube'
                withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
                    sh '''
                        sonar-scanner \
                          -Dsonar.projectKey=crm-symfony-devops \
                          -Dsonar.sources=. \
                          -Dsonar.php.coverage.reportPaths=coverage.xml \
                          -Dsonar.host.url=http://localhost:9000 \
                          -Dsonar.login=$SONAR_TOKEN
                    '''
                }
            }
        }

        stage('Docker Build') {
            steps {
                echo 'Construction de l\'image Docker...'
                sh 'docker build -t $DOCKER_IMAGE .'
            }
        }

        stage('Docker Push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerHub', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $DOCKER_IMAGE
                    '''
                }
            }
        }
    }
}
